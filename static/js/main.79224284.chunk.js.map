{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","serviceWorker.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","_this","handleText","e","setState","target","value","handleCheckbox","handleDate","handleClick","_this$state","length","props","add","console","log","maxDate","this","react_default","a","createElement","className","type","placeholder","onChange","id","htmlFor","min","max","onClick","Component","Task","_props$task","task","active","important","finishDate","style","color","change","delete","finish","toLocaleString","TaskList","tasks","filter","done","sort","b","toLowerCase","activeTasks","map","components_Task","key","doneTasks","Fragment","fontSize","App","counter","deleteTask","Object","toConsumableArray","changeTaskStatus","Array","from","forEach","getTime","addTask","prevState","concat","src_components_AddTask","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79224284.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './AddTask.css'\r\nclass AddTask extends Component {\r\n  minDate = new Date().toISOString().slice(0, 10)\r\n  state = {\r\n    text: \"\",\r\n    checked: false,\r\n    date: this.minDate\r\n  }\r\n  handleText = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n\r\n  handleCheckbox = e => {\r\n    this.setState({\r\n      checked: e.target.checked\r\n    })\r\n  }\r\n\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value\r\n    })\r\n  }\r\n\r\n  handleClick = () => {\r\n\r\n    const { text, checked, date } = this.state\r\n    if (text.length > 2) {\r\n      const add = this.props.add(text, date, checked)\r\n      if (add) {\r\n        this.setState({\r\n          text: '',\r\n          checked: false,\r\n          date: this.minDate\r\n        })\r\n      }\r\n    } else {\r\n      console.log(\"za krótka nazwa\")\r\n    }\r\n  }\r\n  render() {\r\n    let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n    maxDate = maxDate + \"-12-31\"\r\n    return (\r\n      <div className=\"form\">\r\n        <input type=\"text\" placeholder=\"dodaj zadanie\" value={this.state.text} onChange={this.handleText} />\r\n        <input type=\"checkbox\" checked={this.state.checked} id=\"important\" onChange={this.handleCheckbox} />\r\n        <label htmlFor=\"important\">Priorytet</label>\r\n        <br />\r\n        <label htmlFor=\"date\">Do kiedy zrobić</label>\r\n        <input type=\"date\" value={this.state.date} min={this.minDate} max={maxDate} onChange={this.handleDate} />\r\n        <br />\r\n        <button onClick={this.handleClick}>Dodaj</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\n\r\nconst Task = (props) => {\r\n\r\n  const style = {\r\n    color: \"red\",\r\n  }\r\n  const { text, date, id, active, important, finishDate } = props.task\r\n\r\n  if (active) {\r\n\r\n\r\n    return (\r\n      <div>\r\n        <p>\r\n          <strong style={important ? style : null}>{text}</strong> - do <span>{date} </span>\r\n          <button onClick={() => props.change(id)}>Zrobione</button>\r\n          <button onClick={() => props.delete(id)}>X</button>\r\n        </p>\r\n\r\n      </div>\r\n\r\n    );\r\n  } else {\r\n\r\n    const finish = new Date(finishDate).toLocaleString();\r\n    return (\r\n      <div>\r\n        <p>\r\n          <strong>{text}</strong> <em>(zrobić do {date}) </em><br />\r\n          - potwierdzenie wykonania <span> {finish}</span>\r\n\r\n          <button onClick={() => props.delete(id)}>X</button>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task'\r\nconst TaskList = props => {\r\n\r\n  const active = props.tasks.filter(task => task.active)\r\n  const done = props.tasks.filter(task => !task.active)\r\n\r\n  // done.sort((a, b) => b.finishDate - a.finishDate)\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1\r\n      }\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n\r\n  if (active.length >= 2) {\r\n    active.sort((a, b) => {\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n      if (a < b) return -1\r\n      if (a > b) return 1\r\n      return 0\r\n    })\r\n  }\r\n\r\n  const activeTasks = active.map(task => <Task key={task.id}\r\n    task={task}\r\n    delete={props.delete}\r\n    change={props.change}\r\n  />)\r\n  const doneTasks = done.map(task => <Task key={task.id}\r\n    task={task}\r\n    delete={props.delete}\r\n    change={props.change}\r\n  />)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"active\">\r\n        <h1>Zadania do zrobienia</h1>\r\n        {activeTasks.length > 0 ? activeTasks : <p>Nie masz nic do roboty</p>}\r\n      </div>\r\n      <hr />\r\n      <div className=\"done\">\r\n        <h3>Zadania zrobione <em>({done.length})</em></h3>\r\n        {done.length > 5 && <span style={{ fontSize: 12 }}>Wyświetlonych jest jedynie 5 ostatnich zadań</span>}\r\n        {doneTasks.slice(0, 5)}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AddTask from './AddTask'\r\nimport TaskList from './TaskList'\r\n\r\nclass App extends Component {\r\n  counter = 6\r\n  state = {\r\n    tasks: [\r\n      {\r\n        id: 0,\r\n        text: \"zagrać w wota\",\r\n        date: '2020-08-30',\r\n        important: true,\r\n        active: true,\r\n        finishDate: null,\r\n      },\r\n      {\r\n        id: 1,\r\n        text: \"zagrać z fioneczką\",\r\n        date: '2020-08-31',\r\n        important: true,\r\n        active: true,\r\n        finishDate: null,\r\n      },\r\n      {\r\n        id: 2,\r\n        text: \"uczyć się react\",\r\n        date: '2021-08-31',\r\n        important: true,\r\n        active: true,\r\n        finishDate: null,\r\n      },\r\n      {\r\n        id: 3,\r\n        text: \"wyjść na dwór\",\r\n        date: '2020-09-30',\r\n        important: false,\r\n        active: true,\r\n        finishDate: null,\r\n      },\r\n      {\r\n        id: 4,\r\n        text: \"wrócić do szkoły\",\r\n        date: '2020-09-01',\r\n        important: false,\r\n        active: true,\r\n        finishDate: null,\r\n      },\r\n      {\r\n        id: 5,\r\n        text: \"kupić wyprawkę do szq\",\r\n        date: '2020-09-01',\r\n        important: false,\r\n        active: true,\r\n        finishDate: null,\r\n      },\r\n\r\n    ]\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n\r\n    //const tasks = [...this.state.tasks]\r\n    // const index = tasks.findIndex(task => task.id === id)\r\n    // tasks.splice(index, 1)\r\n\r\n    // this.setState({\r\n    //   tasks,\r\n    // })\r\n    let tasks = [...this.state.tasks]\r\n    tasks = tasks.filter(task => task.id !== id)\r\n    this.setState({\r\n      tasks,\r\n    })\r\n\r\n  }\r\n  changeTaskStatus = (id) => {\r\n    console.log(\"done elementu o id\" + id)\r\n    const tasks = Array.from(this.state.tasks);\r\n    tasks.forEach(task => {\r\n      if (task.id === id) {\r\n        task.active = false;\r\n        task.finishDate = new Date().getTime();\r\n      }\r\n    })\r\n    this.setState({\r\n      tasks\r\n    })\r\n  }\r\n\r\n  addTask = (text, date, important) => {\r\n    console.log('ok')\r\n    const task = {\r\n      id: this.counter,\r\n      text,\r\n      date,\r\n      important,\r\n      active: true,\r\n      finishDate: null,\r\n    }\r\n    this.counter++;\r\n    this.setState(prevState => ({\r\n      tasks: [...prevState.tasks, task]\r\n    }))\r\n    return true\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>TO DO APP</h1>\r\n        <AddTask add={this.addTask} />\r\n        <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTaskStatus} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}